<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>这是第四篇文章</title>
      <link href="/2023/01/31/2/"/>
      <url>/2023/01/31/2/</url>
      
        <content type="html"><![CDATA[<h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3>]]></content>
      
      
      <categories>
          
          <category> Data Struct </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是第一篇文章</title>
      <link href="/2023/01/29/test/"/>
      <url>/2023/01/29/test/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇测试文章"><a href="#这是我的第一篇测试文章" class="headerlink" title="这是我的第一篇测试文章"></a>这是我的第一篇测试文章</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是第三篇文章</title>
      <link href="/2023/01/29/%E9%9A%8F%E8%AE%B0/"/>
      <url>/2023/01/29/%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="随记"><a href="#随记" class="headerlink" title="随记"></a>随记</h1><ol><li><p>Java增强for循环</p><blockquote><p>for(数据类型  变量名 : 数组或者集合对象){<br>    &#x2F;&#x2F;循环体，变量即元素<br>}</p><p>注意：<br>增强for的底层依赖的是迭代器。<br>也就是说增强for就是迭代器的简写形式。<br>下边我们通过案例演示一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  &gt;//需求通过增强for遍历list集合。</span><br><span class="line">  &gt;public static void main(String[]args)&#123;</span><br><span class="line">//复习一下如何创建List集合</span><br><span class="line">//1.创建元素对象</span><br><span class="line">List list = new ArrayList();</span><br><span class="line">//添加元素</span><br><span class="line">list.add(10);</span><br><span class="line">list.add(20);</span><br><span class="line">list.add(30);</span><br><span class="line">list.add(40);</span><br><span class="line">list.add(50);</span><br><span class="line">//遍历集合</span><br><span class="line">for(Object obj : list )&#123;</span><br><span class="line">System.out.println(obj);</span><br><span class="line">&#125;</span><br><span class="line">  &gt;&#125;//结果： 10，20，30，40，50</span><br></pre></td></tr></table></figure></blockquote></li><li><blockquote><p><img src="D:\笔记\笔记图片\image-20221221214856951.png" alt="image-20221221214856951"></p></blockquote></li><li><blockquote><pre><code class="java">均数调用decimalFormat.format(sum/num)方法，即可求得保留两位小数的平均数decimalFormat.format(sum/n)   DecimalFormat decimalFormat = new DecimalFormat(&quot;0.00&quot;);格式化小数，保留两位小数。平均数调用decimalFormat.format(sum/num)方法，即可求得保留两位小数的平均数注意：两个int变量相除会向下取整，精度缺失，且不保留小数，所以这里声明sum为double类型，会自动把除得的结果想大的数类型转换。double(10.0) / int(4) = double(2.5)int(10) / int(4) = 2<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">4. **取余问题**</span><br><span class="line"></span><br><span class="line">  &gt;+ **顺序取数 除法/-去掉尾数**</span><br><span class="line"></span><br><span class="line">  &gt;&gt;①去掉最后4位数字（即取首数）：</span><br><span class="line">  &gt;&gt;12345 /10000=1.××××</span><br><span class="line"></span><br><span class="line">  &gt;&gt;②去掉最后3位数字（即取前两位）：</span><br><span class="line">  &gt;&gt;&gt;12345 / 1000=12.××××</span><br><span class="line"></span><br><span class="line">  &gt;&gt;③去掉最后2位数字（即取前三位）：</span><br><span class="line">  &gt;&gt;&gt;12345 / 100=123.××××</span><br><span class="line"></span><br><span class="line">  &gt;&gt;④去掉最后1位数字（即取前四位）：</span><br><span class="line">  &gt;&gt;&gt;12345 / 10=1234.××××</span><br><span class="line"></span><br></pre></td></tr></table></figure>&gt;&gt;注意：其实你可以看成：&gt;去掉后面4位，&gt;去掉后面3位，&gt;去掉后面2位，&gt;去掉后面1位，&gt;int a=12345 / 10000 ;//取最前一位/去掉后面4位：结果：a=1&gt;int a=12345 / 1000 ;//取最前二位/去掉后面3位：结果：a=12&gt;int a=12345 / 100 ;//取最前三位/去掉后面2位：结果：a=123&gt;int a=12345 / 10 ;//取最前四位/去掉后面1位：结果：a=1234&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;+ **取余得思想 逆序取数**</span><br><span class="line"></span><br><span class="line">&gt;&gt;①取尾数：12345%10=5</span><br><span class="line"></span><br><span class="line">&gt;&gt;② 取 后 两 位 ： 12345 % 100 = 45 ②取后两位：12345 \% 100=45②取后两位：12345%100=45</span><br><span class="line"></span><br><span class="line">&gt;&gt;③ 取 后 三 位 ： 12345 % 1000 = 345 ③取后三位：12345 \% 1000=345③取后三位：12345%1000=345</span><br><span class="line"></span><br><span class="line">&gt;&gt;④ 取 后 四 位 ： 12345 % 10000 = 2345 ④取后四位：12345 \% 10000=2345④取后四位：12345%10000=2345</span><br><span class="line"></span><br></pre></td></tr></table></figure>&gt;&gt;int a=12345 % 10000 ;//取后四位：结果：a=2345&gt;int a=12345 % 1000 ;//取后三位：结果：a=345&gt;int a=12345 % 100 ;//取后两位：结果：a=45&gt;int a=12345 &amp; 10 ;//取后一位：结果：a=5&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;取任意位置上得操作方法</span><br><span class="line"></span><br><span class="line">&gt;&gt;**第一种方法：先顺序取数(/)再逆序取数**</span><br><span class="line"></span><br></pre></td></tr></table></figure>&gt;&gt;&gt; 1.取首位 ：12345  / 10000=1（第一位）&gt;&gt; 2.顺序取第二位：分为两步：12345 / 1000=12；12%10=2（第二位）&gt;&gt;&gt; ——连起来写：12345 / 1000 %10=2（第二位）&gt;&gt; 3.顺序取第三位：分为两步：12345 / 100=123；123%10=3（第三位）&gt;&gt;&gt; ——连起来写：12345 / 100 %10=3（第三位）&gt;&gt; 4.顺序取第四位：分为两步：12345 / 10=1234；1234%10=4（第四位）&gt;&gt;&gt; ——连起来写：12345 / 10 %10=4（第四位）&gt;&gt; 5.顺序取第五位：分为两步：12345 / 1=12345；12345%10=5（第五位）&gt;&gt;&gt; ——连起来写：12345 / 1 %10=5（第五位）&gt;&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>&gt;//int a = 9899/1000;//千位&gt;//int b = 9899/100%10;//百位&gt;//int c = 9899/10%10;//十位&gt;//int d = 9899%1000%10;//个位&gt;//System.out.println(a);9&gt;//System.out.println(b);8&gt;//System.out.println(c);9&gt;//System.out.println(d);9&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">5. **闰年问题**</span><br><span class="line"></span><br><span class="line">  &gt;闰年能被4整除但不能被100整除||能被100整除且被400整除</span><br><span class="line"></span><br><span class="line">6. **split函数**</span><br><span class="line"></span><br><span class="line">  &gt;Java中的 split 函数是用于按指定字符（串）或正则去**分割**某个字符串，结果以**字符串数组**形式返回。</span><br><span class="line"></span><br><span class="line">  &gt;- 一个参数：代表根据什么来分（**这个必须位于字符串里面**）</span><br><span class="line">  &gt;- 两个参数：第一个代表**根据什么**来分割，第二个代表**分成几份**，分完之后**后面的不在继续分**</span><br><span class="line">  &gt;- 如果想根据多个字符来分，用 **|** 隔开（所以要注意当本来就要用这个来分割的情况，见后面）</span><br><span class="line"></span><br><span class="line">  &gt;```java</span><br><span class="line">  &gt;public static void main(String[] args) &#123;</span><br><span class="line">       String str=&quot;12@34@56&amp;ab@c&quot;;</span><br><span class="line">     </span><br><span class="line">       String[] a = str.split(&quot;@&quot;);//根据&#x27;@&#x27;来分</span><br><span class="line">       for(String x:a)</span><br><span class="line">           System.out.println(x);// 输出12   34   56&amp;ab  c</span><br><span class="line">           </span><br><span class="line">       String[] b=str.split(&quot;@&quot;,3);//根据&#x27;@&#x27;来分，分成3份</span><br><span class="line">       for(String x:b)</span><br><span class="line">           System.out.println(x);//输出12   34  56&amp;ab@c</span><br><span class="line">           </span><br><span class="line">       String [] c=str.split(&quot;!&quot;);//若原字符串没有这个，则输出原字符串</span><br><span class="line">       for(String x:c)</span><br><span class="line">           System.out.println(x);//输出12@34@56&amp;ab@c</span><br><span class="line">           </span><br><span class="line">       String [] d=str.split(&quot;@|&amp;&quot;);//如果既想用@，又想用&amp;，则用|隔开</span><br><span class="line">       for (String x:d)</span><br><span class="line">           System.out.println(x);//输出12  34  56  ab  c</span><br><span class="line">   </span><br><span class="line">   String arr=&quot;abcd&quot;;</span><br><span class="line">   String[] e = arr.split(&quot;&quot;);//每一个字符都分</span><br><span class="line">   for(String x:e)</span><br><span class="line">           System.out.println(x);// 输出a b c d</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>1、如果用**“.”**作为分隔的话,必须是如下写法,`String.split(&quot;\\.&quot;)`,这样才能正确的分隔开,不能用`String.split(&quot;.&quot;)`2、如果用“|”作为分隔的话,必须是如下写法,`String.split(&quot;\\|&quot;)`,这样才能正确的分隔开,不能用`String.split(&quot;|&quot;)`;**“.”和“|”都是转义字符,必须得加&quot;\\&quot;;**</code></pre></blockquote></li><li><p><strong><code>Interger.parselnt</code></strong></p><blockquote><ul><li>将数字字符串转化成原生整型的数据，属于<code>java.lang.Integer</code>，是原生类型整型的包裹类</li></ul><p> <strong>1. <code>parseInt(String s)</code></strong><br> 将字符串s转换为十进制的数字，默认为十进制.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> num=Integer.parseInt(<span class="string">&quot;100&quot;</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p> <strong><code>2.parseInt(String s,int radix)</code></strong><br> radix代表转换的进制,不写默认为十进制.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">        int num=Integer.parseInt(&quot;100&quot;,16);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是第二篇文章</title>
      <link href="/2023/01/29/test1/"/>
      <url>/2023/01/29/test1/</url>
      
        <content type="html"><![CDATA[<h2 id="第二篇文章"><a href="#第二篇文章" class="headerlink" title="第二篇文章"></a>第二篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
